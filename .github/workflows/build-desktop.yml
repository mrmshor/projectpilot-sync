name: Build Desktop & Mobile App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-web:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build web app
      run: npm run build
    
    - name: Create desktop package structure
      run: |
        mkdir -p desktop-app
        cp -r dist/* desktop-app/
        
        # Create launcher for macOS
        cat > desktop-app/ProjectPilot-Sync.command << 'EOF'
        #!/bin/bash
        cd "$(dirname "$0")"
        echo "Starting ProjectPilot Sync..."
        open "http://localhost:3000" &
        python3 -m http.server 3000
        EOF
        chmod +x desktop-app/ProjectPilot-Sync.command
        
        # Create launcher for Windows
        cat > desktop-app/ProjectPilot-Sync.bat << 'EOF'
        @echo off
        cd /d "%~dp0"
        echo Starting ProjectPilot Sync...
        start "" "http://localhost:3000"
        python -m http.server 3000
        EOF
        
        # Create README
        cat > desktop-app/README.txt << 'EOF'
        ProjectPilot Sync - Desktop App

        For macOS: Double-click ProjectPilot-Sync.command
        For Windows: Double-click ProjectPilot-Sync.bat
        For any system: Open index.html in your browser
        EOF
    
    - name: Create ZIP package
      run: |
        cd desktop-app
        zip -r ../ProjectPilot-Sync-Desktop.zip .
    
    - name: Upload Desktop Package
      uses: actions/upload-artifact@v4
      with:
        name: desktop-package
        path: ProjectPilot-Sync-Desktop.zip

  build-ios:
    runs-on: macos-latest
    needs: build-web
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build web app
      run: npm run build
    
    - name: Setup Capacitor iOS
      run: |
        npx cap add ios
        npx cap sync ios
    
    - name: Create ExportOptions.plist
      run: |
        cat > ios/App/ExportOptions.plist << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
          <key>method</key>
          <string>development</string>
          <key>signingStyle</key>
          <string>automatic</string>
        </dict>
        </plist>
        EOF
    
    - name: Build iOS App (Development)
      run: |
        cd ios/App
        xcodebuild -workspace App.xcworkspace -scheme App -configuration Debug -destination 'platform=iOS Simulator,name=iPhone 14' -derivedDataPath build
        
    - name: Create iOS Archive
      run: |
        cd ios/App
        mkdir -p iOS-Build
        cp -r build/Build/Products/Debug-iphonesimulator/App.app iOS-Build/
        zip -r iOS-Build.zip iOS-Build/
    
    - name: Upload iOS Package
      uses: actions/upload-artifact@v4
      with:
        name: ios-simulator-build
        path: ios/App/iOS-Build.zip