name: Build Electron App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Build React app
      run: npm run build
      
    - name: Setup Mac installer directory
      run: |
        mkdir -p mac-installer/dist
        mkdir -p mac-installer/assets
        cp -r dist/* mac-installer/dist/
        cp electron-main.js mac-installer/main.js
        cp preload.js mac-installer/preload.js
        cp electron-package.json mac-installer/package.json
        cp -r ready-package/assets mac-installer/ 2>/dev/null || echo "No assets found"
        
    - name: Install Electron dependencies
      run: |
        cd mac-installer
        npm install electron@^28.0.0 electron-builder@^24.13.3
        
    - name: Build Electron app (DMG)
      run: |
        cd mac-installer
        npx electron-builder --mac dmg --publish never
        
    - name: Upload DMG artifact
      uses: actions/upload-artifact@v4
      with:
        name: ProjectPilot-Sync-Mac
        path: mac-installer/dist/*.dmg
        
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ProjectPilot Sync ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: mac-installer/dist/*.dmg
        asset_name: ProjectPilot-Sync-Mac.dmg
        asset_content_type: application/x-apple-diskimage