name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-mac:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build web app
      run: npm run build
    
    - name: Copy web app to electron
      run: |
        mkdir -p electron/app
        cp -r dist/* electron/app/
    
    - name: Install electron dependencies
      run: |
        cd electron
        npm install
    
    - name: Build macOS app
      run: |
        cd electron
        npm run build:mac
    
    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-artifacts
        path: electron/dist/*.dmg

  create-release:
    runs-on: ubuntu-latest
    needs: [build-mac]
    steps:
    - name: Download macOS artifacts
      uses: actions/download-artifact@v4
      with:
        name: macos-artifacts
        path: ./macos/
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ProjectPilot Sync ${{ github.ref }}
        draft: false
        prerelease: false
    
    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./macos/ProjectPilot Sync.dmg
        asset_name: ProjectPilot-Sync-macOS-${{ github.ref_name }}.dmg
        asset_content_type: application/octet-stream